
use "../GLib"
use "lib:gobject-2.0"

// Static Functions
// use @g_value_register_transform_func[None](src_type': U64, dest_type': U64, transform_func': GValueTransform)
// use @g_value_type_compatible[I32](src_type': U64, dest_type': U64)
// use @g_value_type_transformable[I32](src_type': U64, dest_type': U64)

// Constructors

// Methods
// use @g_value_copy[None](src_value': NullablePointer[GValueT], dest_value': NullablePointer[GValueT])
// use @g_value_dup_boxed[Pointer[None] tag](value': NullablePointer[GValueT])
// use @g_value_dup_object[Pointer[None] tag](value': NullablePointer[GValueT])
// use @g_value_dup_param[NullablePointer[GParamSpecT]](value': NullablePointer[GValueT])
// use @g_value_dup_string[Pointer[U8] tag](value': NullablePointer[GValueT])
// use @g_value_dup_variant[NullablePointer[GVariantT]](value': NullablePointer[GValueT])
// use @g_value_fits_pointer[I32](value': NullablePointer[GValueT])
// use @g_value_get_boolean[I32](value': NullablePointer[GValueT])
// use @g_value_get_boxed[Pointer[None] tag](value': NullablePointer[GValueT])
// use @g_value_get_char[U8](value': NullablePointer[GValueT])
// use @g_value_get_double[F64](value': NullablePointer[GValueT])
// use @g_value_get_enum[I32](value': NullablePointer[GValueT])
// use @g_value_get_flags[U32](value': NullablePointer[GValueT])
// use @g_value_get_float[F32](value': NullablePointer[GValueT])
// use @g_value_get_gtype[U64](value': NullablePointer[GValueT])
// use @g_value_get_int[I32](value': NullablePointer[GValueT])
// use @g_value_get_int64[I64](value': NullablePointer[GValueT])
// use @g_value_get_long[I64](value': NullablePointer[GValueT])
// use @g_value_get_object[Pointer[None] tag](value': NullablePointer[GValueT])
// use @g_value_get_param[NullablePointer[GParamSpecT]](value': NullablePointer[GValueT])
// use @g_value_get_pointer[Pointer[None] tag](value': NullablePointer[GValueT])
// use @g_value_get_schar[I8](value': NullablePointer[GValueT])
// use @g_value_get_string[Pointer[U8] tag](value': NullablePointer[GValueT])
// use @g_value_get_uchar[U8](value': NullablePointer[GValueT])
// use @g_value_get_uint[U32](value': NullablePointer[GValueT])
// use @g_value_get_uint64[U64](value': NullablePointer[GValueT])
// use @g_value_get_ulong[U64](value': NullablePointer[GValueT])
// use @g_value_get_variant[NullablePointer[GVariantT]](value': NullablePointer[GValueT])
// use @g_value_init[NullablePointer[GValueT]](value': NullablePointer[GValueT], g_type': U64)
// use @g_value_init_from_instance[None](value': NullablePointer[GValueT], instance': Pointer[None] tag)
// use @g_value_peek_pointer[Pointer[None] tag](value': NullablePointer[GValueT])
// use @g_value_reset[NullablePointer[GValueT]](value': NullablePointer[GValueT])
// use @g_value_set_boolean[None](value': NullablePointer[GValueT], v_boolean': I32)
// use @g_value_set_boxed[None](value': NullablePointer[GValueT], v_boxed': Pointer[None] tag)
// use @g_value_set_boxed_take_ownership[None](value': NullablePointer[GValueT], v_boxed': Pointer[None] tag)
// use @g_value_set_char[None](value': NullablePointer[GValueT], v_char': U8)
// use @g_value_set_double[None](value': NullablePointer[GValueT], v_double': F64)
// use @g_value_set_enum[None](value': NullablePointer[GValueT], v_enum': I32)
// use @g_value_set_flags[None](value': NullablePointer[GValueT], v_flags': U32)
// use @g_value_set_float[None](value': NullablePointer[GValueT], v_float': F32)
// use @g_value_set_gtype[None](value': NullablePointer[GValueT], v_gtype': U64)
// use @g_value_set_instance[None](value': NullablePointer[GValueT], instance': Pointer[None] tag)
// use @g_value_set_int[None](value': NullablePointer[GValueT], v_int': I32)
// use @g_value_set_int64[None](value': NullablePointer[GValueT], v_int64': I64)
// use @g_value_set_interned_string[None](value': NullablePointer[GValueT], v_string': Pointer[U8] tag)
// use @g_value_set_long[None](value': NullablePointer[GValueT], v_long': I64)
// use @g_value_set_object[None](value': NullablePointer[GValueT], v_object': Pointer[None] tag)
// use @g_value_set_object_take_ownership[None](value': NullablePointer[GValueT], v_object': Pointer[None] tag)
// use @g_value_set_param[None](value': NullablePointer[GValueT], param': NullablePointer[GParamSpecT])
// use @g_value_set_param_take_ownership[None](value': NullablePointer[GValueT], param': NullablePointer[GParamSpecT])
// use @g_value_set_pointer[None](value': NullablePointer[GValueT], v_pointer': Pointer[None] tag)
// use @g_value_set_schar[None](value': NullablePointer[GValueT], v_char': I8)
// use @g_value_set_static_boxed[None](value': NullablePointer[GValueT], v_boxed': Pointer[None] tag)
// use @g_value_set_static_string[None](value': NullablePointer[GValueT], v_string': Pointer[U8] tag)
// use @g_value_set_string[None](value': NullablePointer[GValueT], v_string': Pointer[U8] tag)
// use @g_value_set_string_take_ownership[None](value': NullablePointer[GValueT], v_string': Pointer[U8] tag)
// use @g_value_set_uchar[None](value': NullablePointer[GValueT], v_uchar': U8)
// use @g_value_set_uint[None](value': NullablePointer[GValueT], v_uint': U32)
// use @g_value_set_uint64[None](value': NullablePointer[GValueT], v_uint64': U64)
// use @g_value_set_ulong[None](value': NullablePointer[GValueT], v_ulong': U64)
// use @g_value_set_variant[None](value': NullablePointer[GValueT], variant': NullablePointer[GVariantT])
// use @g_value_take_boxed[None](value': NullablePointer[GValueT], v_boxed': Pointer[None] tag)
// use @g_value_take_object[None](value': NullablePointer[GValueT], v_object': Pointer[None] tag)
// use @g_value_take_param[None](value': NullablePointer[GValueT], param': NullablePointer[GParamSpecT])
// use @g_value_take_string[None](value': NullablePointer[GValueT], v_string': Pointer[U8] tag)
// use @g_value_take_variant[None](value': NullablePointer[GValueT], variant': NullablePointer[GVariantT])
// use @g_value_transform[I32](src_value': NullablePointer[GValueT], dest_value': NullablePointer[GValueT])
// use @g_value_unset[None](value': NullablePointer[GValueT])
