
use "../GLib"
use "../Gio"
use "../GObject"
//  use "../Gdk"
//  use "../Gsk"
use "lib:gtk-4"
// use @gtk_accelerator_get_default_mod_mask[U32]()
// use @gtk_accelerator_get_label[Pointer[U8]](accelerator_key': U32, accelerator_mods': U32)
// use @gtk_accelerator_get_label_with_keycode[Pointer[U8]](display': NullablePointer[GdkDisplayT], accelerator_key': U32, keycode': U32, accelerator_mods': U32)
// use @gtk_accelerator_name[Pointer[U8]](accelerator_key': U32, accelerator_mods': U32)
// use @gtk_accelerator_name_with_keycode[Pointer[U8]](display': NullablePointer[GdkDisplayT], accelerator_key': U32, keycode': U32, accelerator_mods': U32)
// use @gtk_accelerator_parse[I32](accelerator': Pointer[U8] tag, accelerator_key': Pointer[U32] tag, accelerator_mods': Pointer[U32] tag)
// use @gtk_accelerator_parse_with_keycode[I32](accelerator': Pointer[U8] tag, display': NullablePointer[GdkDisplayT], accelerator_key': Pointer[U32] tag, accelerator_codes': Pointer[Pointer[U32]] tag, accelerator_mods': Pointer[U32] tag)
// use @gtk_accelerator_valid[I32](keyval': U32, modifiers': U32)
// use @gtk_check_version[Pointer[U8]](required_major': U32, required_minor': U32, required_micro': U32)
// use @gtk_css_parser_error_quark[U32]()
// use @gtk_css_parser_warning_quark[U32]()
// use @gtk_disable_setlocale[None]()
// use @gtk_distribute_natural_allocation[I32](extra_space': I32, n_requested_sizes': U32, sizes': NullablePointer[GtkRequestedSizeT])
// use @gtk_get_binary_age[U32]()
// use @gtk_get_debug_flags[U32]()
// use @gtk_get_default_language[Pointer[PangoLanguageT]]()
// use @gtk_get_interface_age[U32]()
// use @gtk_get_locale_direction[U32]()
// use @gtk_get_major_version[U32]()
// use @gtk_get_micro_version[U32]()
// use @gtk_get_minor_version[U32]()
// use @gtk_hsv_to_rgb[None](h': F32, s': F32, v': F32, r': Pointer[F32] tag, g': Pointer[F32] tag, b': Pointer[F32] tag)
use @gtk_init[None]()
// use @gtk_init_check[I32]()
// use @gtk_is_initialized[I32]()
// use @gtk_param_spec_expression[Pointer[GParamSpecT]](name': Pointer[U8] tag, nick': Pointer[U8] tag, blurb': Pointer[U8] tag, flags': I32)
// use @gtk_print_run_page_setup_dialog[Pointer[GtkPageSetupT]](parent': NullablePointer[GtkWindowT], page_setup': NullablePointer[GtkPageSetupT], settings': NullablePointer[GtkPrintSettingsT])
// use @gtk_render_activity[None](context': NullablePointer[GtkStyleContextT], cr': NullablePointer[cairoT], x': F64, y': F64, width': F64, height': F64)
// use @gtk_render_arrow[None](context': NullablePointer[GtkStyleContextT], cr': NullablePointer[cairoT], angle': F64, x': F64, y': F64, size': F64)
// use @gtk_render_background[None](context': NullablePointer[GtkStyleContextT], cr': NullablePointer[cairoT], x': F64, y': F64, width': F64, height': F64)
// use @gtk_render_check[None](context': NullablePointer[GtkStyleContextT], cr': NullablePointer[cairoT], x': F64, y': F64, width': F64, height': F64)
// use @gtk_render_expander[None](context': NullablePointer[GtkStyleContextT], cr': NullablePointer[cairoT], x': F64, y': F64, width': F64, height': F64)
// use @gtk_render_focus[None](context': NullablePointer[GtkStyleContextT], cr': NullablePointer[cairoT], x': F64, y': F64, width': F64, height': F64)
// use @gtk_render_frame[None](context': NullablePointer[GtkStyleContextT], cr': NullablePointer[cairoT], x': F64, y': F64, width': F64, height': F64)
// use @gtk_render_handle[None](context': NullablePointer[GtkStyleContextT], cr': NullablePointer[cairoT], x': F64, y': F64, width': F64, height': F64)
// use @gtk_render_icon[None](context': NullablePointer[GtkStyleContextT], cr': NullablePointer[cairoT], texture': NullablePointer[GdkTextureT], x': F64, y': F64)
// use @gtk_render_layout[None](context': NullablePointer[GtkStyleContextT], cr': NullablePointer[cairoT], x': F64, y': F64, layout': NullablePointer[PangoLayoutT])
// use @gtk_render_line[None](context': NullablePointer[GtkStyleContextT], cr': NullablePointer[cairoT], x0': F64, y0': F64, x1': F64, y1': F64)
// use @gtk_render_option[None](context': NullablePointer[GtkStyleContextT], cr': NullablePointer[cairoT], x': F64, y': F64, width': F64, height': F64)
// use @gtk_rgb_to_hsv[None](r': F32, g': F32, b': F32, h': Pointer[F32] tag, s': Pointer[F32] tag, v': Pointer[F32] tag)
// use @gtk_set_debug_flags[None](flags': U32)
// use @gtk_show_about_dialog[None](parent': NullablePointer[GtkWindowT], first_property_name': Pointer[U8] tag, ...)
// use @gtk_show_uri[None](parent': NullablePointer[GtkWindowT], uri': Pointer[U8] tag, timestamp': U32)
// use @gtk_show_uri_full_finish[I32](parent': NullablePointer[GtkWindowT], result': NullablePointer[GAsyncResultT], error': Pointer[NullablePointer[GErrorT]])
// use @gtk_test_accessible_assertion_message_role[None](domain': Pointer[U8] tag, file': Pointer[U8] tag, line': I32, func': Pointer[U8] tag, expr': Pointer[U8] tag, accessible': NullablePointer[GtkAccessibleT], expected_role': U32, actual_role': U32)
// use @gtk_test_accessible_check_property[Pointer[U8]](accessible': NullablePointer[GtkAccessibleT], property': U32, ...)
// use @gtk_test_accessible_check_relation[Pointer[U8]](accessible': NullablePointer[GtkAccessibleT], relation': U32, ...)
// use @gtk_test_accessible_check_state[Pointer[U8]](accessible': NullablePointer[GtkAccessibleT], state': U32, ...)
// use @gtk_test_accessible_has_property[I32](accessible': NullablePointer[GtkAccessibleT], property': U32)
// use @gtk_test_accessible_has_relation[I32](accessible': NullablePointer[GtkAccessibleT], relation': U32)
// use @gtk_test_accessible_has_role[I32](accessible': NullablePointer[GtkAccessibleT], role': U32)
// use @gtk_test_accessible_has_state[I32](accessible': NullablePointer[GtkAccessibleT], state': U32)
// use @gtk_test_list_all_types[Pointer[U64]](n_types': Pointer[U32] tag)
// use @gtk_test_register_all_types[None]()
// use @gtk_test_widget_wait_for_draw[None](widget': NullablePointer[GtkWidgetT])
// use @gtk_tree_create_row_drag_content[Pointer[GdkContentProviderT]](tree_model': NullablePointer[GtkTreeModelT], path': NullablePointer[GtkTreePathT])
// use @gtk_tree_get_row_drag_data[I32](value': NullablePointer[GValueT], tree_model': Pointer[NullablePointer[GtkTreeModelT]], path': Pointer[NullablePointer[GtkTreePathT]])
// use @gtk_value_dup_expression[Pointer[GtkExpressionT]](value': NullablePointer[GValueT])
// use @gtk_value_get_expression[Pointer[GtkExpressionT]](value': NullablePointer[GValueT])
// use @gtk_value_set_expression[None](value': NullablePointer[GValueT], expression': NullablePointer[GtkExpressionT])
// use @gtk_value_take_expression[None](value': NullablePointer[GValueT], expression': NullablePointer[GtkExpressionT])
