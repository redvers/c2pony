
use "lib:glib-2.0"

// Static Functions
// use @g_queue_new[GQueueT]()

// Constructors

// Methods
// use @g_queue_clear[None](queue': GQueueT)
// use @g_queue_clear_full[None](queue': GQueueT, free_func': GDestroyNotify)
// use @g_queue_copy[GQueueT](queue': GQueueT)
// use @g_queue_delete_link[None](queue': GQueueT, link_': GListT)
// use @g_queue_find[GListT](queue': GQueueT, data': Pointer[None] tag)
// use @g_queue_find_custom[GListT](queue': GQueueT, data': Pointer[None] tag, func': GCompareFunc)
// use @g_queue_foreach[None](queue': GQueueT, func': GFunc, user_data': Pointer[None] tag)
// use @g_queue_free[None](queue': GQueueT)
// use @g_queue_free_full[None](queue': GQueueT, free_func': GDestroyNotify)
// use @g_queue_get_length[U32](queue': GQueueT)
// use @g_queue_index[I32](queue': GQueueT, data': Pointer[None] tag)
// use @g_queue_init[None](queue': GQueueT)
// use @g_queue_insert_after[None](queue': GQueueT, sibling': GListT, data': Pointer[None] tag)
// use @g_queue_insert_after_link[None](queue': GQueueT, sibling': GListT, link_': GListT)
// use @g_queue_insert_before[None](queue': GQueueT, sibling': GListT, data': Pointer[None] tag)
// use @g_queue_insert_before_link[None](queue': GQueueT, sibling': GListT, link_': GListT)
// use @g_queue_insert_sorted[None](queue': GQueueT, data': Pointer[None] tag, func': GCompareDataFunc, user_data': Pointer[None] tag)
// use @g_queue_is_empty[I32](queue': GQueueT)
// use @g_queue_link_index[I32](queue': GQueueT, link_': GListT)
// use @g_queue_peek_head[Pointer[None] tag](queue': GQueueT)
// use @g_queue_peek_head_link[GListT](queue': GQueueT)
// use @g_queue_peek_nth[Pointer[None] tag](queue': GQueueT, n': U32)
// use @g_queue_peek_nth_link[GListT](queue': GQueueT, n': U32)
// use @g_queue_peek_tail[Pointer[None] tag](queue': GQueueT)
// use @g_queue_peek_tail_link[GListT](queue': GQueueT)
// use @g_queue_pop_head[Pointer[None] tag](queue': GQueueT)
// use @g_queue_pop_head_link[GListT](queue': GQueueT)
// use @g_queue_pop_nth[Pointer[None] tag](queue': GQueueT, n': U32)
// use @g_queue_pop_nth_link[GListT](queue': GQueueT, n': U32)
// use @g_queue_pop_tail[Pointer[None] tag](queue': GQueueT)
// use @g_queue_pop_tail_link[GListT](queue': GQueueT)
// use @g_queue_push_head[None](queue': GQueueT, data': Pointer[None] tag)
// use @g_queue_push_head_link[None](queue': GQueueT, link_': GListT)
// use @g_queue_push_nth[None](queue': GQueueT, data': Pointer[None] tag, n': I32)
// use @g_queue_push_nth_link[None](queue': GQueueT, n': I32, link_': GListT)
// use @g_queue_push_tail[None](queue': GQueueT, data': Pointer[None] tag)
// use @g_queue_push_tail_link[None](queue': GQueueT, link_': GListT)
// use @g_queue_remove[I32](queue': GQueueT, data': Pointer[None] tag)
// use @g_queue_remove_all[U32](queue': GQueueT, data': Pointer[None] tag)
// use @g_queue_reverse[None](queue': GQueueT)
// use @g_queue_sort[None](queue': GQueueT, compare_func': GCompareDataFunc, user_data': Pointer[None] tag)
// use @g_queue_unlink[None](queue': GQueueT, link_': GListT)
