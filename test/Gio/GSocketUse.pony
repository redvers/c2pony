
use "../GLib"
use "../GObject"
use "lib:gio-2.0"

// Static Functions

// Constructors
// use @g_socket_new[NullablePointer[GSocketT]](family': U32, type': U32, protocol': I32, error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_new_from_fd[NullablePointer[GSocketT]](fd': I32, error': Pointer[NullablePointer[GErrorT]])

// Methods
// use @g_socket_accept[NullablePointer[GSocketT]](socket': NullablePointer[GSocketT], cancellable': NullablePointer[GCancellableT], error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_bind[I32](socket': NullablePointer[GSocketT], address': NullablePointer[GSocketAddressT], allow_reuse': I32, error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_check_connect_result[I32](socket': NullablePointer[GSocketT], error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_close[I32](socket': NullablePointer[GSocketT], error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_condition_check[U32](socket': NullablePointer[GSocketT], condition': U32)
// use @g_socket_condition_timed_wait[I32](socket': NullablePointer[GSocketT], condition': U32, timeout_us': I64, cancellable': NullablePointer[GCancellableT], error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_condition_wait[I32](socket': NullablePointer[GSocketT], condition': U32, cancellable': NullablePointer[GCancellableT], error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_connect[I32](socket': NullablePointer[GSocketT], address': NullablePointer[GSocketAddressT], cancellable': NullablePointer[GCancellableT], error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_connection_factory_create_connection[NullablePointer[GSocketConnectionT]](socket': NullablePointer[GSocketT])
// use @g_socket_create_source[NullablePointer[GSourceT]](socket': NullablePointer[GSocketT], condition': U32, cancellable': NullablePointer[GCancellableT])
// use @g_socket_get_available_bytes[I64](socket': NullablePointer[GSocketT])
// use @g_socket_get_blocking[I32](socket': NullablePointer[GSocketT])
// use @g_socket_get_broadcast[I32](socket': NullablePointer[GSocketT])
// use @g_socket_get_credentials[NullablePointer[GCredentialsT]](socket': NullablePointer[GSocketT], error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_get_family[U32](socket': NullablePointer[GSocketT])
// use @g_socket_get_fd[I32](socket': NullablePointer[GSocketT])
// use @g_socket_get_keepalive[I32](socket': NullablePointer[GSocketT])
// use @g_socket_get_listen_backlog[I32](socket': NullablePointer[GSocketT])
// use @g_socket_get_local_address[NullablePointer[GSocketAddressT]](socket': NullablePointer[GSocketT], error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_get_multicast_loopback[I32](socket': NullablePointer[GSocketT])
// use @g_socket_get_multicast_ttl[U32](socket': NullablePointer[GSocketT])
// use @g_socket_get_option[I32](socket': NullablePointer[GSocketT], level': I32, optname': I32, value': Pointer[I32] tag, error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_get_protocol[I32](socket': NullablePointer[GSocketT])
// use @g_socket_get_remote_address[NullablePointer[GSocketAddressT]](socket': NullablePointer[GSocketT], error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_get_socket_type[U32](socket': NullablePointer[GSocketT])
// use @g_socket_get_timeout[U32](socket': NullablePointer[GSocketT])
// use @g_socket_get_ttl[U32](socket': NullablePointer[GSocketT])
// use @g_socket_is_closed[I32](socket': NullablePointer[GSocketT])
// use @g_socket_is_connected[I32](socket': NullablePointer[GSocketT])
// use @g_socket_join_multicast_group[I32](socket': NullablePointer[GSocketT], group': NullablePointer[GInetAddressT], source_specific': I32, iface': Pointer[U8] tag, error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_join_multicast_group_ssm[I32](socket': NullablePointer[GSocketT], group': NullablePointer[GInetAddressT], source_specific': NullablePointer[GInetAddressT], iface': Pointer[U8] tag, error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_leave_multicast_group[I32](socket': NullablePointer[GSocketT], group': NullablePointer[GInetAddressT], source_specific': I32, iface': Pointer[U8] tag, error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_leave_multicast_group_ssm[I32](socket': NullablePointer[GSocketT], group': NullablePointer[GInetAddressT], source_specific': NullablePointer[GInetAddressT], iface': Pointer[U8] tag, error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_listen[I32](socket': NullablePointer[GSocketT], error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_receive[I64](socket': NullablePointer[GSocketT], buffer': Pointer[U8] tag, size': U64, cancellable': NullablePointer[GCancellableT], error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_receive_from[I64](socket': NullablePointer[GSocketT], address': Pointer[NullablePointer[GSocketAddressT]], buffer': Pointer[U8] tag, size': U64, cancellable': NullablePointer[GCancellableT], error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_receive_messages[I32](socket': NullablePointer[GSocketT], messages': NullablePointer[GInputMessageT], num_messages': U32, flags': I32, cancellable': NullablePointer[GCancellableT], error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_receive_with_blocking[I64](socket': NullablePointer[GSocketT], buffer': Pointer[U8] tag, size': U64, blocking': I32, cancellable': NullablePointer[GCancellableT], error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_send[I64](socket': NullablePointer[GSocketT], buffer': Pointer[U8] tag, size': U64, cancellable': NullablePointer[GCancellableT], error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_send_message[I64](socket': NullablePointer[GSocketT], address': NullablePointer[GSocketAddressT], vectors': NullablePointer[GOutputVectorT], num_vectors': I32, messages': Pointer[NullablePointer[GSocketControlMessageT]], num_messages': I32, flags': I32, cancellable': NullablePointer[GCancellableT], error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_send_message_with_timeout[I32](socket': NullablePointer[GSocketT], address': NullablePointer[GSocketAddressT], vectors': NullablePointer[GOutputVectorT], num_vectors': I32, messages': Pointer[NullablePointer[GSocketControlMessageT]], num_messages': I32, flags': I32, timeout_us': I64, bytes_written': Pointer[U64] tag, cancellable': NullablePointer[GCancellableT], error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_send_messages[I32](socket': NullablePointer[GSocketT], messages': NullablePointer[GOutputMessageT], num_messages': U32, flags': I32, cancellable': NullablePointer[GCancellableT], error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_send_to[I64](socket': NullablePointer[GSocketT], address': NullablePointer[GSocketAddressT], buffer': Pointer[U8] tag, size': U64, cancellable': NullablePointer[GCancellableT], error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_send_with_blocking[I64](socket': NullablePointer[GSocketT], buffer': Pointer[U8] tag, size': U64, blocking': I32, cancellable': NullablePointer[GCancellableT], error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_set_blocking[None](socket': NullablePointer[GSocketT], blocking': I32)
// use @g_socket_set_broadcast[None](socket': NullablePointer[GSocketT], broadcast': I32)
// use @g_socket_set_keepalive[None](socket': NullablePointer[GSocketT], keepalive': I32)
// use @g_socket_set_listen_backlog[None](socket': NullablePointer[GSocketT], backlog': I32)
// use @g_socket_set_multicast_loopback[None](socket': NullablePointer[GSocketT], loopback': I32)
// use @g_socket_set_multicast_ttl[None](socket': NullablePointer[GSocketT], ttl': U32)
// use @g_socket_set_option[I32](socket': NullablePointer[GSocketT], level': I32, optname': I32, value': I32, error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_set_timeout[None](socket': NullablePointer[GSocketT], timeout': U32)
// use @g_socket_set_ttl[None](socket': NullablePointer[GSocketT], ttl': U32)
// use @g_socket_shutdown[I32](socket': NullablePointer[GSocketT], shutdown_read': I32, shutdown_write': I32, error': Pointer[NullablePointer[GErrorT]])
// use @g_socket_speaks_ipv4[I32](socket': NullablePointer[GSocketT])
